{"ast":null,"code":"var _jsxFileName = \"/Users/julibean/Desktop/Pair-programming/src/components/Main.js\";\nimport React from \"react\";\nimport Song from \"./Song.js\";\nimport axios from \"axios\";\nimport \"../components/SongList\";\nimport { songList } from \"../components/SongList.js\";\nimport \"./Main.scss\";\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.inputRef = React.createRef();\n    this.state = {\n      songList: songList,\n      selectedSong: {\n        song: \"I Believe I Can Fly\",\n        movie: \"Space Jam\",\n        id: 2296192\n      },\n      points: 0,\n      total: 0,\n      message: null\n    };\n\n    this.checkAnswer = evt => {\n      evt.preventDefault();\n      const answer = evt.target.answer.value;\n\n      if (answer.toLowerCase() === this.state.selectedSong.movie.toLowerCase()) {\n        this.setState({\n          points: this.state.points + 1,\n          total: this.state.total + 1,\n          message: \"Great job! You got it!\"\n        });\n      } else {\n        this.setState({\n          total: this.state.total + 1,\n          message: \"Sorry, your guess was incorrect. please try again!\"\n        });\n      }\n\n      this.inputRef.current.value = \"\";\n    };\n\n    this.songPlaying = (id, index) => {\n      const song = this.state.songList[index];\n      axios.get(`https://deezerdevs-deezer.p.rapidapi.com/track/${id}`, {\n        headers: {\n          \"content-type\": \"application/octet-stream\",\n          \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"ce143ba573msh6e12bd67b4aab48p123d44jsndda60e32671d\",\n          useQueryString: true\n        }\n      }).then(result => {\n        // console.log(\"got it!:\", result.data.preview);\n        this.setState({\n          selectedSong: {\n            song: song.song,\n            movie: song.movie,\n            id: id,\n            url: result.data.preview\n          }\n        });\n        console.log(this.state.selectedSong);\n      }).catch(err => {\n        console.log(\"Could not complete GET request\", err);\n      });\n      let list = this.state.songList;\n      list.splice(index, 1);\n      this.setState({\n        songList: list\n      });\n      console.log(\"songList:\", this.state.songList);\n    };\n\n    this.nextSong = () => {\n      const selectedIndex = Math.floor(Math.random() * this.state.songList.length);\n      const selectedId = this.state.songList[selectedIndex].id;\n      this.songPlaying(selectedId, selectedIndex);\n      this.setState({\n        message: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outerBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, \"Name that T\\xFCne\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, \"We've created a game of theme songs from popular TV shows and Movies throughout the years. Have you been paying attention to your favourite shows and movies \"), /*#__PURE__*/React.createElement(\"form\", {\n      classname: \"form\",\n      onSubmit: this.checkAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, this.state.selectedSong.url && /*#__PURE__*/React.createElement(Song, {\n      url: this.state.selectedSong.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      name: \"answer\",\n      placeholder: \"Insert Movie Title Here\",\n      ref: this.inputRef,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"submitbtn\",\n      type: \"submit\",\n      name: \"enterBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }\n    }, this.state.button), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 6\n      }\n    }, this.state.message), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }\n    }, \"Your Score: \", this.state.points, \"/\", this.state.total)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"next-song\",\n      onClick: () => {\n        this.nextSong();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, \"Next Song\"));\n  }\n\n  componentDidMount() {\n    this.nextSong();\n  } // componentDidUpdate(prevProps) {}\n\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/julibean/Desktop/Pair-programming/src/components/Main.js"],"names":["React","Song","axios","songList","Main","Component","inputRef","createRef","state","selectedSong","song","movie","id","points","total","message","checkAnswer","evt","preventDefault","answer","target","value","toLowerCase","setState","current","songPlaying","index","get","headers","useQueryString","then","result","url","data","preview","console","log","catch","err","list","splice","nextSong","selectedIndex","Math","floor","random","length","selectedId","render","button","componentDidMount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Song from \"./Song.js\";\nimport axios from \"axios\";\nimport \"../components/SongList\";\nimport { songList } from \"../components/SongList.js\";\nimport \"./Main.scss\";\n\nclass Main extends React.Component {\n\tinputRef = React.createRef();\n\n\tstate = {\n\t\tsongList: songList,\n\t\tselectedSong: {\n\t\t\tsong: \"I Believe I Can Fly\",\n\t\t\tmovie: \"Space Jam\",\n\t\t\tid: 2296192,\n\t\t},\n\t\tpoints: 0,\n\t\ttotal: 0,\n\t\tmessage: null,\n\t};\n\n\tcheckAnswer = evt => {\n\t\tevt.preventDefault();\n\n\t\tconst answer = evt.target.answer.value;\n\t\tif (answer.toLowerCase() === this.state.selectedSong.movie.toLowerCase()) {\n\t\t\tthis.setState({\n\t\t\t\tpoints: this.state.points + 1,\n\t\t\t\ttotal: this.state.total + 1,\n\t\t\t\tmessage: \"Great job! You got it!\",\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttotal: this.state.total + 1,\n\t\t\t\tmessage: \"Sorry, your guess was incorrect. please try again!\",\n\t\t\t});\n\t\t}\n\t\tthis.inputRef.current.value = \"\";\n\t};\n\n\tsongPlaying = (id, index) => {\n\t\tconst song = this.state.songList[index];\n\n\t\taxios\n\t\t\t.get(`https://deezerdevs-deezer.p.rapidapi.com/track/${id}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t\"content-type\": \"application/octet-stream\",\n\t\t\t\t\t\"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\n\t\t\t\t\t\"x-rapidapi-key\":\n\t\t\t\t\t\t\"ce143ba573msh6e12bd67b4aab48p123d44jsndda60e32671d\",\n\t\t\t\t\tuseQueryString: true,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then(result => {\n\t\t\t\t// console.log(\"got it!:\", result.data.preview);\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedSong: {\n\t\t\t\t\t\tsong: song.song,\n\t\t\t\t\t\tmovie: song.movie,\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\turl: result.data.preview,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tconsole.log(this.state.selectedSong);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(\"Could not complete GET request\", err);\n\t\t\t});\n\n\t\tlet list = this.state.songList;\n\t\tlist.splice(index, 1);\n\t\tthis.setState({ songList: list });\n\t\tconsole.log(\"songList:\", this.state.songList);\n\t};\n\n\tnextSong = () => {\n\t\tconst selectedIndex = Math.floor(\n\t\t\tMath.random() * this.state.songList.length\n\t\t);\n\t\tconst selectedId = this.state.songList[selectedIndex].id;\n\n\t\tthis.songPlaying(selectedId, selectedIndex);\n\t\tthis.setState({ message: \"\" });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"outerBox\">\n\t\t\t\t<h1>Name that Tüne</h1>\n\t\t\t\t<h5>We've created a game of theme songs from popular TV shows and Movies throughout the years. Have you been paying attention to your favourite shows and movies </h5>\n\t\t\t\t<form classname=\"form\" onSubmit={this.checkAnswer}>\n\t\t\t\t\t{this.state.selectedSong.url && (\n\t\t\t\t\t\t<Song url={this.state.selectedSong.url} />\n\t\t\t\t\t)}\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"answer\"\n\t\t\t\t\t\tplaceholder=\"Insert Movie Title Here\"\n\t\t\t\t\t\tref={this.inputRef}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t></input>\n\t\t\t\t\t<input className=\"submitbtn\" type=\"submit\" name=\"enterBtn\">\n\t\t\t\t\t\t{this.state.button}\n\t\t\t\t\t</input>\n\t\t\t\t\t<h4>{this.state.message}</h4>\n\t\t\t\t\t<h3 className=\"score\">\n\t\t\t\t\t\tYour Score: {this.state.points}/{this.state.total}\n\t\t\t\t\t</h3>\n\t\t\t\t</form>\n\t\t\t\t<button className=\"next-song\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.nextSong();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tNext Song\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.nextSong();\n\t}\n\n\t// componentDidUpdate(prevProps) {}\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}